version: 2.1
orbs: 
  dynamo-lock: gastfreund/dynamo-lock@1.0.1

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: cimg/node:17.5.0

jobs:
  build_and_test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Get a Staging Lock
          command: |
            source ./.circleci/duplo_utils.sh
            lock staging_deployment 300

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run: npm install
      - run:
          name: Run tests
          command: sleep 120

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Release a Staging Lock
          command: |
            source ./.circleci/duplo_utils.sh
            unlock staging_deployment 300
      - run:
          name: Release a Staging Lock on fail
          command: |
            source ./.circleci/duplo_utils.sh
            unlock staging_d

      - persist_to_workspace:
          root: ~/repo
          paths: .
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: 
          name: Setup Git
          command: |
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            git config --global user.email "ganesh@duplocloud.com"
            git config --global user.name "Ganesh"
      - run:
          name: Authenticate with registry
          command: echo "//npm.pkg.github.com/:_authToken=$GIT_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm run release --ci --major --no-git.requireCleanWorkingDir
          env:
            GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

workflows:
  version: 2.1
  build_test_deploy:
    jobs:
      - build_and_test:
          filters:
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - build_and_test
          filters:
            branches:
              only: master